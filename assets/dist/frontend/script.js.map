{"version":3,"file":"frontend/script.js","mappings":"yBACA,IAAIA,EAAsB,CCA1BA,EAAwB,SAASC,GAChC,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,WAAa,OAAOF,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAF,EAAwB,SAASM,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAR,EAAwB,SAASc,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,GCAlG,EAA+BI,OAAW,GAAY,S,SCK1D,MAAMC,EAAQC,SAASC,iBACtB,kKAMKC,EAAUC,GAGS,MAApBA,EAASC,OACL,KAGDD,EAASE,KAAOF,EAASE,OAASC,QAAQC,OAAOJ,GAGzDJ,EAAMS,SAAQ,CAACC,EAAMC,EAAOC,KAC3BF,EAAKG,iBACJ,UACCC,IAEA,MAAMJ,EAAOI,EAAMC,OACbC,EAAWN,EAAKO,cAAc,+BAC9BC,EAASR,EAAKO,cAAc,yBAiBlC,GAdAC,EAAOC,UAAUC,IAAI,iCAGrBJ,EAASG,UAAUE,OAClB,2BACA,8BAODL,EAASM,UAAY,GAEjBZ,EAAKa,QAAQC,OAAQ,CACxB,MAAMC,EAAO,IAAIC,SAAShB,GAGW,iBAA1BA,EAAKa,QAAQI,UACvBF,EAAKG,OAAO,cAAelB,EAAKa,QAAQI,UAGzCE,IAAS,CACRC,KAAMpB,EAAKa,QAAQC,OACnBO,OAAQrB,EAAKqB,OACbC,KAAMP,EAONQ,OAAO,IAENC,MAAM9B,GACCD,EAAOC,KAEd8B,MAAMC,IAINjB,EAAOC,UAAUE,OAChB,iCAImC,iBAAzBc,EAAQC,eAClB1B,EAAKa,QAAQa,aAAeD,EAAQC,cAGL,iBAArBD,EAAQR,SAClB5B,OAAOsC,SAASC,QAAQH,EAAQR,UAEN,kBAAnBQ,EAAQI,SACf,IAASJ,EAAQI,OAEjBxC,OAAOsC,SAASE,SAES,kBAAlBJ,EAAQK,QACf,IAASL,EAAQK,OAEjB9B,EAAK8B,QAImC,iBAA9B9B,EAAKa,QAAQa,eACvBpB,EAASG,UAAUC,IAClB,8BAEDJ,EAASM,UACR,QAAUZ,EAAKa,QAAQa,aAAe,UAIxClB,EAAOuB,UAAW,CAAK,IAEvBC,OAAOtC,GACAD,EAAOC,KAEd8B,MAAMS,IAGF,EAAIA,EAAMC,QAAQC,SACrB7B,EAASG,UAAUC,IAAI,4BAEvBJ,EAASM,UACR,QAAUqB,EAAMC,QAAU,UAI5B1B,EAAOC,UAAUE,OAChB,iCAIDH,EAAOuB,UAAW,CAAK,GAE1B,CAGAvB,EAAOuB,UAAW,EAGlB3B,EAAMgC,gBAAgB,IAEvB,EACA,G","sources":["webpack://connections/webpack/bootstrap","webpack://connections/webpack/runtime/compat get default export","webpack://connections/webpack/runtime/define property getters","webpack://connections/webpack/runtime/hasOwnProperty shorthand","webpack://connections/external window [\"wp\",\"apiFetch\"]","webpack://connections/./assets/src/forms/user-login/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\nconst forms = document.querySelectorAll(\n\t'[data-component=\"form-user_login\"],' +\n\t\t'[data-component=\"form-user_register\"],' +\n\t\t'[data-component=\"form-request_reset_password\"],' +\n\t\t'[data-component=\"form-reset_password\"]'\n);\n\nconst _parse = (response) => {\n\tconsole.log(response);\n\n\tif (response.status === 204) {\n\t\treturn null;\n\t}\n\n\treturn response.json ? response.json() : Promise.reject(response);\n};\n\nforms.forEach((form, index, array) => {\n\tform.addEventListener(\n\t\t'submit',\n\t\t(event) => {\n\t\t\t// Store reference to form to make later code easier to read.\n\t\t\tconst form = event.target;\n\t\t\tconst messages = form.querySelector('[data-component=\"messages\"]');\n\t\t\tconst submit = form.querySelector('button[type=\"submit\"]');\n\n\t\t\t// Set button loading state.\n\t\t\tsubmit.classList.add('cbd-field--button__is-loading');\n\n\t\t\t// Reset the messages container class.\n\t\t\tmessages.classList.remove(\n\t\t\t\t'cbd-form__message--error',\n\t\t\t\t'cbd-form__message--success'\n\t\t\t);\n\n\t\t\t// Reset the messages container display.\n\t\t\t// messages.style.display = 'none';\n\n\t\t\t// Reset the messages container content.\n\t\t\tmessages.innerHTML = '';\n\n\t\t\tif (form.dataset.action) {\n\t\t\t\tconst data = new FormData(form);\n\n\t\t\t\t// Add redirect to the form data.\n\t\t\t\tif (typeof form.dataset.redirect === 'string') {\n\t\t\t\t\tdata.append('redirect_to', form.dataset.redirect);\n\t\t\t\t}\n\n\t\t\t\tapiFetch({\n\t\t\t\t\tpath: form.dataset.action,\n\t\t\t\t\tmethod: form.method,\n\t\t\t\t\tbody: data,\n\t\t\t\t\t/*\n\t\t\t\t\t * Disable the automatic parsing of the Response instance and utilize a private callback instead\n\t\t\t\t\t * because there are errors that can be returned by apiFetch that are not parsed and the native\n\t\t\t\t\t * Response instance is returned instead of the expected parsed data making it inconsistent.\n\t\t\t\t\t * Applying the private parse callback ensures a consistent parsed response for the error handler.\n\t\t\t\t\t */\n\t\t\t\t\tparse: false,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\treturn _parse(response);\n\t\t\t\t\t})\n\t\t\t\t\t.then((success) => {\n\t\t\t\t\t\tconsole.log(success);\n\n\t\t\t\t\t\t// Set button loading state.\n\t\t\t\t\t\tsubmit.classList.remove(\n\t\t\t\t\t\t\t'cbd-field--button__is-loading'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// If the response contains a confirmation message, set the for data value.\n\t\t\t\t\t\tif (typeof success.confirmation === 'string') {\n\t\t\t\t\t\t\tform.dataset.confirmation = success.confirmation;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof success.redirect === 'string') {\n\t\t\t\t\t\t\twindow.location.replace(success.redirect);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof success.reload === 'boolean' &&\n\t\t\t\t\t\t\ttrue === success.reload\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof success.reset === 'boolean' &&\n\t\t\t\t\t\t\ttrue === success.reset\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Display the confirmation message.\n\t\t\t\t\t\tif (typeof form.dataset.confirmation === 'string') {\n\t\t\t\t\t\t\tmessages.classList.add(\n\t\t\t\t\t\t\t\t'cbd-form__message--success'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmessages.innerHTML =\n\t\t\t\t\t\t\t\t'<div>' + form.dataset.confirmation + '</div>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Enable the submit button to allow additional requests.\n\t\t\t\t\t\tsubmit.disabled = false;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((response) => {\n\t\t\t\t\t\treturn _parse(response);\n\t\t\t\t\t})\n\t\t\t\t\t.then((error) => {\n\t\t\t\t\t\tconsole.error(error);\n\n\t\t\t\t\t\tif (0 < error.message.length) {\n\t\t\t\t\t\t\tmessages.classList.add('cbd-form__message--error');\n\n\t\t\t\t\t\t\tmessages.innerHTML =\n\t\t\t\t\t\t\t\t'<div>' + error.message + '</div>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set button loading state.\n\t\t\t\t\t\tsubmit.classList.remove(\n\t\t\t\t\t\t\t'cbd-field--button__is-loading'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Enable the submit button to allow additional requests.\n\t\t\t\t\t\tsubmit.disabled = false;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Disable submit button to prevent additional requests.\n\t\t\tsubmit.disabled = true;\n\n\t\t\t// Prevent the default form submit.\n\t\t\tevent.preventDefault();\n\t\t},\n\t\tfalse\n\t);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","forms","document","querySelectorAll","_parse","response","status","json","Promise","reject","forEach","form","index","array","addEventListener","event","target","messages","querySelector","submit","classList","add","remove","innerHTML","dataset","action","data","FormData","redirect","append","apiFetch","path","method","body","parse","then","success","confirmation","location","replace","reload","reset","disabled","catch","error","message","length","preventDefault"],"sourceRoot":""}